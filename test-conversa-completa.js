import axios from 'axios';

// Configura√ß√£o do teste
const API_BASE = 'http://localhost:3001';
const TEST_PHONE = '5511999887766'; // N√∫mero de teste

// Headers padr√£o
const headers = {
  'Content-Type': 'application/json'
};

// Fun√ß√£o para simular mensagem do cliente
async function sendMessage(phone, message) {
  console.log(`\nüì§ ENVIANDO: "${message}"`);
  
  try {
    const response = await axios.post(`${API_BASE}/webhook/inbound`, {
      phone: phone,
      body: message,
      timestamp: Date.now(),
      id: `test_${Date.now()}`,
      source: 'test'
    }, { headers });
    
    console.log(`üì• RESPOSTA: "${response.data?.response || 'Sem resposta'}"`);
    return response.data?.response;
  } catch (error) {
    console.error(`‚ùå ERRO: ${error.message}`);
    return null;
  }
}

// Fun√ß√£o para delay entre mensagens
function sleep(ms) {
  return new Promise(resolve => setTimeout(resolve, ms));
}

// Teste completo de venda
async function testeVendaCompleta() {
  console.log('üöÄ INICIANDO TESTE COMPLETO DE VENDA');
  console.log('=' .repeat(50));
  
  try {
    // 1. Primeira intera√ß√£o - Cliente interessado
    console.log('\nüéØ FASE 1: INTERESSE INICIAL');
    await sendMessage(TEST_PHONE, 'oi, vi sobre a calcinha modeladora');
    await sleep(2000);
    
    // 2. Cliente pergunta sobre pre√ßo
    console.log('\nüí∞ FASE 2: PERGUNTA SOBRE PRE√áO');
    await sendMessage(TEST_PHONE, 'quanto custa?');
    await sleep(2000);
    
    // 3. Cliente demonstra interesse
    console.log('\n‚ú® FASE 3: DEMONSTRA INTERESSE');
    await sendMessage(TEST_PHONE, 'quero sim, como fa√ßo para comprar?');
    await sleep(2000);
    
    // 4. Fornecer nome
    console.log('\nüìù FASE 4: COLETA DE DADOS - NOME');
    await sendMessage(TEST_PHONE, 'Maria Silva');
    await sleep(2000);
    
    // 5. Teste de valida√ß√£o de nome inv√°lido
    console.log('\n‚ùå FASE 5: TESTE VALIDA√á√ÉO NOME INV√ÅLIDO');
    await sendMessage(TEST_PHONE, 'eu');
    await sleep(2000);
    
    // 6. Fornecer nome v√°lido
    console.log('\n‚úÖ FASE 6: NOME V√ÅLIDO');
    await sendMessage(TEST_PHONE, 'Maria Silva Santos');
    await sleep(2000);
    
    // 7. Fornecer endere√ßo
    console.log('\nüè† FASE 7: COLETA DE DADOS - ENDERE√áO');
    await sendMessage(TEST_PHONE, 'Rua das Flores, 123, Centro, 01234-567');
    await sleep(2000);
    
    // 8. Teste de mudan√ßa de dados
    console.log('\nüîÑ FASE 8: TESTE MUDAN√áA DE DADOS');
    await sendMessage(TEST_PHONE, 'quero mudar meu nome para Ana Maria');
    await sleep(2000);
    
    // 9. Confirma√ß√£o final
    console.log('\n‚úÖ FASE 9: CONFIRMA√á√ÉO FINAL');
    await sendMessage(TEST_PHONE, 'sim, est√° correto');
    await sleep(2000);
    
    // 10. Teste de abandono
    console.log('\nüõë FASE 10: TESTE DE ABANDONO');
    await sendMessage(TEST_PHONE, 'n√£o quero mais');
    await sleep(2000);
    
    console.log('\nüéâ TESTE COMPLETO FINALIZADO!');
    
  } catch (error) {
    console.error(`‚ùå ERRO NO TESTE: ${error.message}`);
  }
}

// Executar teste
testeVendaCompleta();
