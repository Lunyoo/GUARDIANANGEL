// üß† SISTEMA ML-GPT TOTALMENTE INTEGRADO
// Prompt Gigantesco + Machine Learning Adaptativo

export interface MLPromptConfig {
  abordagem: string
  estilo: string
  urgencia: string
  ofertas: string
  objecoes: Record<string, string>
  fechamento: string
  personalizacao: Record<string, any>
}

export interface ProductKnowledgeBase {
  produto: {
    nome: string
    beneficios: string[]
    material: string
    tecnologia: string[]
    resultados: string[]
    diferenciais: string[]
    garantias: string[]
  }
  tamanhos: Record<string, {
    medidas: string
    perfil: string
    recomendacao: string
  }>
  cores: Record<string, {
    nome: string
    descricao: string
    popularidade: string
  }>
  precos: Record<string, {
    valor: number
    economia: string
    estrategia: string
    publico_alvo: string
  }>
  entrega: {
    cod_cities: string[]
    prazos: Record<string, string>
    formas_pagamento: string[]
    tracking: boolean
  }
  objecoes_comuns: Record<string, {
    problema: string
    solucoes: string[]
    social_proof: string[]
  }>
}

// üéØ BASE DE CONHECIMENTO GIGANTESCA
export const PRODUCT_KNOWLEDGE_BASE: ProductKnowledgeBase = {
  produto: {
  nome: "Calcinha Lipo Modeladora",
    beneficios: [
      "Reduz instantaneamente 2-3 tamanhos visuais",
      "Levanta e modela o bumbum naturalmente", 
      "Achata barriga e define cintura",
      "Elimina culotes e gordura localizada",
      "Melhora postura e alinhamento corporal",
      "Real√ßa curvas naturais do corpo",
      "Compress√£o suave sem desconforto",
      "Invis√≠vel por baixo das roupas",
      "Tecido respir√°vel que n√£o marca",
      "Autoestima instant√¢nea ao usar"
    ],
    material: "Microfibra premium importada com elastano de alta performance",
    tecnologia: [
      "Compress√£o gradual 360¬∞ inteligente",
      "Costura flat sem marcas aparentes", 
      "El√°stico embutido que n√£o aperta",
      "Tecido antibacteriano e anti-odor",
      "Secagem r√°pida e durabilidade estendida"
    ],
    resultados: [
      "Silhueta definida imediatamente",
      "Roupas ficam mais justas e bonitas",
      "Confian√ßa aumentada em 95% das usu√°rias",
      "Postura melhorada comprovada",
      "Redu√ß√£o visual de medidas em fotos"
    ],
    diferenciais: [
      "√önica com tecnologia de compress√£o gradual",
      "Testada e aprovada por mais de 50.000 mulheres",
      "Recomendada por fisioterapeutas",
      "Resistente a 500+ lavagens",
      "Design ergon√¥mico exclusivo"
    ],
    garantias: [
      "Garantia contra defeitos de fabrica√ß√£o",
      "Atendimento para escolher o tamanho certo",
      "Sem trocas por higiene/seguran√ßa"
    ]
  },

  tamanhos: {
    P: {
      medidas: "Cintura 60-65cm, Quadril 85-90cm",
      perfil: "Mulheres de 45-55kg, bi√≥tipos pequenos",
      recomendacao: "Ideal para quem quer modelagem suave"
    },
    M: {
      medidas: "Cintura 66-70cm, Quadril 91-96cm", 
      perfil: "Mulheres de 56-65kg, mais vendido",
      recomendacao: "Perfeito para modelagem moderada"
    },
    G: {
      medidas: "Cintura 71-75cm, Quadril 97-102cm",
      perfil: "Mulheres de 66-75kg, curvas acentuadas", 
      recomendacao: "√ìtimo para defini√ß√£o de cintura"
    },
    GG: {
      medidas: "Cintura 76-82cm, Quadril 103-110cm",
      perfil: "Mulheres de 76kg+, plus size",
      recomendacao: "M√°xima modelagem e conforto"
    }
  },

  cores: {
    preto: {
      nome: "Preto Cl√°ssico",
      descricao: "Cor mais vers√°til, combina com tudo",
      popularidade: "70% das vendas, preferida universalmente"
    },
    bege: {
      nome: "Bege Nude",
      descricao: "Invis√≠vel sob roupas claras",
      popularidade: "30% das vendas, ideal para roupas brancas"
    }
  },

  precos: {
    "1un": {
      valor: 97.00,
      economia: "Ideal para testar",
      estrategia: "Entrada",
      publico_alvo: "Primeira compra"
    },
    "2un": {
      valor: 139.90,
      economia: "Mais vendido, melhor custo-benef√≠cio",
      estrategia: "Principal",
      publico_alvo: "Uso di√°rio"
    },
    "3un": {
      valor: 179.90,
      economia: "M√°xima economia",
      estrategia: "Estoque pessoal",
      publico_alvo: "Clientes satisfeitas"
    }
  },

  entrega: {
    cod_cities: [
      // REGI√ÉO SUDESTE
      "S√£o Paulo", "Rio de Janeiro", "Belo Horizonte", "Campinas", "Santos", 
      "S√£o Bernardo do Campo", "Guarulhos", "Osasco", "Santo Andr√©", "S√£o Jos√© dos Campos",
      "Ribeir√£o Preto", "Sorocaba", "Mau√°", "S√£o Jos√© do Rio Preto", "Mogi das Cruzes",
      "Diadema", "Jundia√≠", "Carapicu√≠ba", "Piracicaba", "Bauru", "S√£o Vicente", "Itaquaquecetuba",
      "Niter√≥i", "Nova Igua√ßu", "Belford Roxo", "S√£o Jo√£o de Meriti", "Duque de Caxias",
      "Campos dos Goytacazes", "Petr√≥polis", "Volta Redonda", "Mag√©", "Itabora√≠",
      "Nova Friburgo", "Barra Mansa", "Teres√≥polis", "Angra dos Reis", "Cabo Frio",
      "Contagem", "Uberl√¢ndia", "Juiz de Fora", "Betim", "Montes Claros", "Ribeir√£o das Neves",
      "Uberaba", "Governador Valadares", "Ipatinga", "Santa Luzia", "Sete Lagoas",
      
      // REGI√ÉO SUL  
      "Curitiba", "Porto Alegre", "Joinville", "Londrina", "Caxias do Sul", "Maring√°",
      "Ponta Grossa", "Cascavel", "S√£o Jos√© dos Pinhais", "Foz do Igua√ßu", "Colombo",
      "Canoas", "Pelotas", "Santa Maria", "Gravata√≠", "Viam√£o", "Novo Hamburgo", "S√£o Leopoldo",
      "Rio Grande", "Alvorada", "Passo Fundo", "Sapucaia do Sul", "Uruguaiana", "Bag√©",
      "Blumenau", "S√£o Bento do Sul", "Chapec√≥", "Itaja√≠", "Jaragu√° do Sul", "Lages"
    ],
    prazos: {
      "COD": "Entrega em 24-48h com pagamento na entrega",
      "Correios": "7-14 dias √∫teis via PAC/SEDEX",
      "Expressa": "3-5 dias √∫teis para capitais"
    },
    formas_pagamento: [
      "üí∞ Pagamento na Entrega (COD) - 70 cidades",
      "üí≥ Pagamento antecipado (Correios)",
      "üí≥ PIX dispon√≠vel"
    ],
    tracking: true
  },

  objecoes_comuns: {
    preco_alto: {
      problema: "Cliente acha caro",
      solucoes: [
        "Compare com academia (R$ 80/m√™s) - nossa calcinha dura anos",
        "Divida por dias de uso - menos de R$ 3 por dia",
        "Economia em roupas novas - valoriza o que j√° tem"
      ],
      social_proof: [
        "50.000+ mulheres aprovaram o investimento",
        "98% relatam que vale cada centavo",
        "Clientes compram novamente em 60 dias"
      ]
    },
    
    desconfianca_produto: {
      problema: "D√∫vida se funciona realmente", 
      solucoes: [
        "Tecnologia comprovada por testes cl√≠nicos",
        "Resultados vis√≠veis na primeira utiliza√ß√£o",
        "Garantia de 30 dias ou dinheiro de volta"
      ],
      social_proof: [
        "Mais de 15.000 depoimentos reais",
        "Antes e depois comprovados",
        "Recomendada por profissionais de sa√∫de"
      ]
    },
    
  tamanho_duvida: {
      problema: "N√£o sabe qual tamanho escolher",
      solucoes: [
    "Guia de medidas detalhado",
    "Te ajudo a acertar o tamanho",
    "Atendimento personalizado"
      ],
      social_proof: [
        "95% acertam o tamanho na primeira",
        "Consultoria gratuita por WhatsApp",
    "Sistema de medidas testado por milhares"
      ]
    },
    
    prazo_entrega: {
      problema: "Demora para chegar",
      solucoes: [
        "COD dispon√≠vel em 70 cidades (24-48h)",
        "Rastreamento em tempo real",
        "Expressa para capitais (3-5 dias)"
      ],
      social_proof: [
        "99% das entregas no prazo",
        "Log√≠stica premium confi√°vel",
        "Milhares de entregas mensais"
      ]
    }
  }
}

// üéØ ML INTEGRADO - ESTRAT√âGIAS DIN√ÇMICAS
export class MLIntegratedPromptEngine {
  private mlConfig: MLPromptConfig
  private knowledgeBase: ProductKnowledgeBase
  
  constructor(private universalBandits: any) {
    this.knowledgeBase = PRODUCT_KNOWLEDGE_BASE
    this.mlConfig = this.getMLOptimizedConfig()
  }
  
  private getMLOptimizedConfig(): MLPromptConfig {
    // ü§ñ ML DECIDE ESTRAT√âGIAS EM TEMPO REAL
    const banditContext = {
      timeOfDay: this.getTimeOfDay(),
      dayOfWeek: this.getDayType(),
      customerProfile: 'unknown' // ser√° atualizado por contexto
    }
    
    return {
      abordagem: this.universalBandits.selectBestArm('approach', banditContext)?.variant || 'consultiva',
      estilo: this.universalBandits.selectBestArm('style', banditContext)?.variant || 'amigavel',
      urgencia: this.universalBandits.selectBestArm('urgency', banditContext)?.variant || 'moderada',
      ofertas: this.universalBandits.selectBestArm('offers', banditContext)?.variant || 'combo',
      fechamento: this.universalBandits.selectBestArm('closing', banditContext)?.variant || 'beneficio',
      objecoes: this.getMLOptimizedObjectionHandling(),
      personalizacao: this.getMLPersonalization()
    }
  }
  
  private getMLOptimizedObjectionHandling(): Record<string, string> {
    // ML aprende melhores respostas para cada obje√ß√£o
    return {
      preco: this.universalBandits.selectBestArm('objection_price', {})?.variant || 'valor_comparativo',
      qualidade: this.universalBandits.selectBestArm('objection_quality', {})?.variant || 'social_proof',
      tamanho: this.universalBandits.selectBestArm('objection_size', {})?.variant || 'consultoria',
      prazo: this.universalBandits.selectBestArm('objection_delivery', {})?.variant || 'cod_emphasis'
    }
  }
  
  private getMLPersonalization(): Record<string, any> {
    return {
      emoji_level: this.universalBandits.selectBestArm('emoji_usage', {})?.variant || 'moderado',
      message_length: this.universalBandits.selectBestArm('message_length', {})?.variant || 'conciso',
      technical_level: this.universalBandits.selectBestArm('technical_detail', {})?.variant || 'simples'
    }
  }
  
  // üéØ GERA PROMPT GIGANTESCO PERSONALIZADO
  public generateMegaPrompt(
    conversationHistory: any[], 
    customerContext: any,
    banditContext: any
  ): string {
    
    // ü§ñ ATUALIZA CONFIG ML BASEADO NO CONTEXTO DO CLIENTE
    this.updateMLConfigForCustomer(customerContext, banditContext)
    
    const prompt = `
# üéØ LARISSA - ESPECIALISTA EM CALCINHA LIPO MODELADORA

## üë§ SUA IDENTIDADE
Voc√™ √© a Larissa, consultora especializada em modelagem corporal feminina. Trabalha exclusivamente com a Calcinha Lipo Modeladora Premium. Sua miss√£o √© ajudar mulheres a se sentirem mais confiantes e bonitas.

## üìã CONHECIMENTO COMPLETO DO PRODUTO

### üåü PRODUTO PRINCIPAL
**${this.knowledgeBase.produto.nome}**

**BENEF√çCIOS PRINCIPAIS:**
${this.knowledgeBase.produto.beneficios.map(b => `‚Ä¢ ${b}`).join('\n')}

**TECNOLOGIA E MATERIAL:**
‚Ä¢ Material: ${this.knowledgeBase.produto.material}
${this.knowledgeBase.produto.tecnologia.map(t => `‚Ä¢ ${t}`).join('\n')}

**RESULTADOS COMPROVADOS:**
${this.knowledgeBase.produto.resultados.map(r => `‚Ä¢ ${r}`).join('\n')}

**DIFERENCIAIS √öNICOS:**
${this.knowledgeBase.produto.diferenciais.map(d => `‚Ä¢ ${d}`).join('\n')}

**GARANTIAS OFERECIDAS:**
${this.knowledgeBase.produto.garantias.map(g => `‚Ä¢ ${g}`).join('\n')}

### üìè GUIA COMPLETO DE TAMANHOS
${Object.entries(this.knowledgeBase.tamanhos).map(([size, info]) => 
  `**TAMANHO ${size}:**
  ‚Ä¢ Medidas: ${info.medidas}
  ‚Ä¢ Perfil: ${info.perfil}
  ‚Ä¢ Recomenda√ß√£o: ${info.recomendacao}`
).join('\n\n')}

### üé® CORES DISPON√çVEIS
${Object.entries(this.knowledgeBase.cores).map(([cor, info]) =>
  `**${info.nome}:**
  ‚Ä¢ ${info.descricao}
  ‚Ä¢ Popularidade: ${info.popularidade}`
).join('\n\n')}

### üí∞ ESTRAT√âGIA DE PRE√áOS (ML OTIMIZADA)
${Object.entries(this.knowledgeBase.precos).map(([qty, info]) =>
  `**${qty.toUpperCase()}:** R$ ${info.valor.toFixed(2).replace('.', ',')}
  ‚Ä¢ ${info.economia}
  ‚Ä¢ Estrat√©gia: ${info.estrategia}
  ‚Ä¢ P√∫blico: ${info.publico_alvo}`
).join('\n\n')}

### üöö ENTREGA E PAGAMENTO

**CIDADES COM PAGAMENTO NA ENTREGA (COD):**
${this.knowledgeBase.entrega.cod_cities.join(', ')}

**PRAZOS DE ENTREGA:**
${Object.entries(this.knowledgeBase.entrega.prazos).map(([type, prazo]) => `‚Ä¢ ${type}: ${prazo}`).join('\n')}

**FORMAS DE PAGAMENTO:**
${this.knowledgeBase.entrega.formas_pagamento.map(p => `‚Ä¢ ${p}`).join('\n')}

‚ö†Ô∏è DIFERENCIAL IMPORTANTE: Se o cliente estiver em uma das 70 cidades COD, destaque SEMPRE que paga s√≥ na entrega (sem taxa/frete). Fora dessas cidades, deixar claro que √© Correios com pagamento antecipado.

### üõ°Ô∏è TRATAMENTO DE OBJE√á√ïES (ML OTIMIZADO)

${Object.entries(this.knowledgeBase.objecoes_comuns).map(([tipo, obj]) =>
  `**${obj.problema.toUpperCase()}:**
  
  Solu√ß√µes:
  ${obj.solucoes.map(s => `‚Ä¢ ${s}`).join('\n')}
  
  Prova Social:
  ${obj.social_proof.map(p => `‚Ä¢ ${p}`).join('\n')}`
).join('\n\n')}

## üéØ ESTRAT√âGIA ML PERSONALIZADA (TEMPO REAL)

**ABORDAGEM ATUAL:** ${this.mlConfig.abordagem}
**ESTILO DE COMUNICA√á√ÉO:** ${this.mlConfig.estilo}  
**N√çVEL DE URG√äNCIA:** ${this.mlConfig.urgencia}
**FOCO EM OFERTAS:** ${this.mlConfig.ofertas}
**T√âCNICA DE FECHAMENTO:** ${this.mlConfig.fechamento}

**PERSONALIZA√á√ÉO:**
‚Ä¢ Uso de Emojis: ${this.mlConfig.personalizacao.emoji_level}
‚Ä¢ Tamanho de Mensagem: ${this.mlConfig.personalizacao.message_length}
‚Ä¢ N√≠vel T√©cnico: ${this.mlConfig.personalizacao.technical_level}

## üìö HIST√ìRICO DA CONVERSA COMPLETA
${this.formatConversationHistory(conversationHistory)}

## üéØ INSTRU√á√ïES DE RESPOSTA

1. **CONTEXTO TOTAL:** Analise TODA a conversa anterior antes de responder
2. **PROGRESS√ÉO:** Cada resposta deve avan√ßar a venda naturalmente
3. **PERSONALIZA√á√ÉO:** Use o nome do cliente quando souber
4. **CIDADE:** Se souber a cidade, mencione entrega espec√≠fica
5. **OBJE√á√ïES:** Use as estrat√©gias ML otimizadas acima
6. **FECHAMENTO:** Sempre guie para a compra quando apropriado

**NUNCA:**
‚Ä¢ Invente informa√ß√µes n√£o listadas acima
‚Ä¢ Ofere√ßa pre√ßos diferentes dos especificados
‚Ä¢ Prometa prazos imposs√≠veis
‚Ä¢ Ignore o contexto da conversa

**SEMPRE:**
‚Ä¢ Seja natural e humana
‚Ä¢ Mantenha o foco no cliente
‚Ä¢ Use as informa√ß√µes completas do produto
‚Ä¢ Siga a estrat√©gia ML personalizada

## üí¨ RESPONDA AGORA COMO LARISSA:
    `
    
    return prompt
  }
  
  private formatConversationHistory(history: any[]): string {
    return history.map((msg, index) => {
      const direction = msg.direction === 'inbound' ? 'üë§ CLIENTE' : 'üë©‚Äçüíº LARISSA'
      const timestamp = new Date(msg.createdAt).toLocaleTimeString('pt-BR')
      return `${index + 1}. [${timestamp}] ${direction}: ${msg.content}`
    }).join('\n')
  }
  
  private updateMLConfigForCustomer(customerContext: any, banditContext: any) {
    // üß† ML SE ADAPTA BASEADO NO PERFIL DO CLIENTE
    const updatedContext = {
      ...banditContext,
      customerProfile: this.determineCustomerProfile(customerContext),
      hasShownInterest: customerContext?.hasShownInterest || false,
      hasAskedPrice: customerContext?.hasAskedPrice || false,
      city: customerContext?.city || 'unknown'
    }
    
    // Atualiza estrat√©gias baseado no perfil
    this.mlConfig = this.getMLOptimizedConfigForProfile(updatedContext)
  }
  
  private determineCustomerProfile(ctx: any): string {
    if (ctx?.readyToBuy) return 'hot'
    if (ctx?.hasAskedPrice || ctx?.hasShownInterest) return 'warm'
    return 'cold'
  }
  
  private getMLOptimizedConfigForProfile(context: any): MLPromptConfig {
    // ML escolhe estrat√©gias espec√≠ficas para cada perfil
    return {
      abordagem: this.universalBandits.selectBestArm('approach', context)?.variant || 'consultiva',
      estilo: this.universalBandits.selectBestArm('style', context)?.variant || 'amigavel',
      urgencia: context.customerProfile === 'hot' ? 'alta' : 'moderada',
      ofertas: this.universalBandits.selectBestArm('offers', context)?.variant || 'combo',
      fechamento: this.universalBandits.selectBestArm('closing', context)?.variant || 'beneficio',
      objecoes: this.getMLOptimizedObjectionHandling(),
      personalizacao: this.getMLPersonalization()
    }
  }
  
  private getTimeOfDay(): string {
    const hour = new Date().getHours()
    if (hour < 12) return 'morning'
    if (hour < 18) return 'afternoon'
    return 'evening'
  }
  
  private getDayType(): string {
    const day = new Date().getDay()
    return (day === 0 || day === 6) ? 'weekend' : 'weekday'
  }
  
  // üìä REGISTRA RESULTADO PARA ML APRENDER
  public recordConversationResult(result: {
    responded: boolean
    progressed: boolean
    converted: boolean
    feedback: string
  }) {
    // Registra resultado para todos os bandits usados
    const armMap: Array<{key: keyof MLPromptConfig, id: string, value: string}> = [
      { key: 'abordagem', id: 'approach', value: this.mlConfig.abordagem },
      { key: 'estilo', id: 'style', value: this.mlConfig.estilo },
      { key: 'urgencia', id: 'urgency', value: this.mlConfig.urgencia },
      { key: 'ofertas', id: 'offers', value: this.mlConfig.ofertas },
      { key: 'fechamento', id: 'closing', value: this.mlConfig.fechamento }
    ]

    armMap.forEach(({ id, value }) => {
      const armId = `${id}_${value}`
      this.universalBandits.recordResult(armId, {
        impression: true,
        interaction: result.responded,
        conversion: result.converted
      })
    })
    
    // Log para dashboard de decis√µes
    console.log('üéØ ML Decision Recorded:', {
      config: this.mlConfig,
      result,
      timestamp: new Date().toISOString()
    })
  }
}

export default MLIntegratedPromptEngine
