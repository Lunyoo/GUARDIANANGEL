import axios from 'axios';

const baseURL = 'http://localhost:3001';
const phone = '5511998877665'; // Novo n√∫mero para evitar conflitos

async function sendAndWait(body, description, waitTime = 4000) {
  console.log(`\nüîÑ ${description}`);
  console.log(`üì§ Enviando: "${body}"`);
  
  try {
    const response = await axios.post(`${baseURL}/api/public/test-wa-message`, {
      phone: phone,
      body: body
    });
    
    console.log('‚úÖ Mensagem enviada');
    
    // Aguardar processamento
    console.log(`‚è≥ Aguardando ${waitTime/1000}s para pr√≥xima mensagem...`);
    await new Promise(resolve => setTimeout(resolve, waitTime));
    
    return response.data;
    
  } catch (error) {
    console.error('‚ùå Erro:', error.response?.data || error.message);
  }
}

async function completeFlowSimulation() {
  console.log('üé¨ NOVA SIMULA√á√ÉO DE VENDA COMPLETA');
  console.log('üì± Cliente:', phone);
  console.log('‚è∞ Timing: Mensagens com intervalo de 4 segundos');
  console.log('=' .repeat(60));
  
  // Fluxo sequencial com intervalos maiores
  await sendAndWait('Oi', '1Ô∏è‚É£ Cliente inicia conversa');
  
  await sendAndWait('Quero saber sobre a calcinha modeladora', '2Ô∏è‚É£ Cliente demonstra interesse');
  
  await sendAndWait('Quero ver as fotos', '3Ô∏è‚É£ Cliente pede fotos', 8000); // Mais tempo para fotos
  
  await sendAndWait('Qual o pre√ßo?', '4Ô∏è‚É£ Cliente pergunta pre√ßo');
  
  await sendAndWait('Quero comprar 2 unidades', '5Ô∏è‚É£ Cliente decide quantidade');
  
  await sendAndWait('Moro no Rio de Janeiro', '6Ô∏è‚É£ Cliente informa cidade COD');
  
  await sendAndWait('Meu nome √© Maria da Silva', '7Ô∏è‚É£ Cliente informa nome');
  
  await sendAndWait('Quero a cor bege', '8Ô∏è‚É£ Cliente escolhe cor');
  
  await sendAndWait('Rua das Palmeiras, 456, Ipanema, Rio de Janeiro', '9Ô∏è‚É£ Cliente informa endere√ßo completo');
  
  await sendAndWait('Sim, confirmo a compra', 'üîü Cliente confirma o pedido final');
  
  console.log('\nüéâ SIMULA√á√ÉO COMPLETA FINALIZADA!');
  console.log('‚úÖ Verifique os logs para ver o fluxo completo');
}

// Executar
completeFlowSimulation().catch(console.error);
